.data
    inputs 12 0 0 0 0 0 0 0 0 0 0 0 0
    result 1 0
.const
    s1 83 "\n\rWelcome to the DLX LCM Calculator!\n\rPlease enter 12 numbers separated by spaces: "
    s2 8 "\n\rLCM = "
.text
    ; print string s1
    ADDI R15, R0, s1
    JAL printstring
    ADDI R1, R0, 0
inputloop
    ; End loop if 12 inputs have been read
    SEQI R10, R1, 12
    BNEZ R10, inputloopdone
    ; Read input
    GDU R3
    ; Place pointer at the top of the stack of data
    ADD R2, R1, R0
sortloop
    ; If there are no prev inputs, or we've reached 0, end the loop
    BEQZ R2, sortloopdone
    ; Load the input below the current pointer
    SUBI R4, R2, 1
    LW R5, inputs(R4)
    ; If the input is less than the current pointer, swap them
    SGTU R10, R5, R3
    BEQZ R10, sortloopdone
    SW inputs(R2), R5 
    SUBI R2, R2, 1
    J sortloop
sortloopdone
    ; formally place the new value in memory
    SW inputs(R2), R3 
    ADDI R1, R1, 1
    J inputloop
inputloopdone
    TCLR
    TSRT
    ; Load inputs into registers
    ADDI R13, R0, 0
    LW R1 inputs(R13)
    ADDI R13, R13, 1
    LW R2 inputs(R13)
    ADDI R13, R13, 1
    LW R3 inputs(R13)
    ADDI R13, R13, 1
    LW R4 inputs(R13)
    ADDI R13, R13, 1
    LW R5 inputs(R13)
    ADDI R13, R13, 1
    LW R6 inputs(R13)
    ADDI R13, R13, 1
    LW R7 inputs(R13)
    ADDI R13, R13, 1
    LW R8 inputs(R13)
    ADDI R13, R13, 1
    LW R9 inputs(R13)
    ADDI R13, R13, 1
    LW R10 inputs(R13)
    ADDI R13, R13, 1
    LW R11 inputs(R13)
    ADDI R13, R13, 1
    LW R12 inputs(R13)

    ; -- initial
    LCM R1, R1, R12
    NOOP

    LCM R2, R2, R11
    NOOP

    LCM R3, R3, R10
    NOOP

    LCM R4, R4, R9
    NOOP

    LCM R5, R5, R8
    NOOP

    LCM R6, R6, R7
    NOOP
    NOOP

    ; -- intermediates
    LCM R1, R1, R6
    NOOP

    LCM R2, R2, R5
    NOOP

    LCM R3, R3, R4
    NOOP

    ; -- final 2
    LCM R1, R1, R2
    NOOP
    NOOP

    LCM R3, R1, R3
    NOOP
    NOOP

    J exit

; assumes input pointer is R15 and string is '\0' terminated 
printstring
    ADDI R17, R0, 0
printloop
	LWP R16, R15(R17)
	BEQZ R16 doneprinting
	PCH R16
	ADDI R17, R17, 1
	J printloop
doneprinting
	JR R63

exit
    ADDI R15, R0, s2
    JAL printstring
    PDU R3
    TSTP
done
    J done